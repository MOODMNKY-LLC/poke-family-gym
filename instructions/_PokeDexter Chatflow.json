{
  "nodes": [
    {
      "id": "toolAgent_0",
      "position": {
        "x": 1097.4208657424156,
        "y": 413.78962915804334
      },
      "type": "customNode",
      "data": {
        "id": "toolAgent_0",
        "label": "Tool Agent",
        "version": 2,
        "name": "toolAgent",
        "type": "AgentExecutor",
        "baseClasses": [
          "AgentExecutor",
          "BaseChain",
          "Runnable"
        ],
        "category": "Agents",
        "description": "Agent that uses Function Calling to pick the tools and args to call",
        "inputParams": [
          {
            "label": "System Message",
            "name": "systemMessage",
            "type": "string",
            "default": "You are a helpful AI assistant.",
            "description": "If Chat Prompt Template is provided, this will be ignored",
            "rows": 4,
            "optional": true,
            "additionalParams": true,
            "id": "toolAgent_0-input-systemMessage-string"
          },
          {
            "label": "Max Iterations",
            "name": "maxIterations",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "toolAgent_0-input-maxIterations-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "id": "toolAgent_0-input-tools-Tool"
          },
          {
            "label": "Memory",
            "name": "memory",
            "type": "BaseChatMemory",
            "id": "toolAgent_0-input-memory-BaseChatMemory"
          },
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat",
            "id": "toolAgent_0-input-model-BaseChatModel"
          },
          {
            "label": "Chat Prompt Template",
            "name": "chatPromptTemplate",
            "type": "ChatPromptTemplate",
            "description": "Override existing prompt with Chat Prompt Template. Human Message must includes {input} variable",
            "optional": true,
            "id": "toolAgent_0-input-chatPromptTemplate-ChatPromptTemplate"
          },
          {
            "label": "Input Moderation",
            "description": "Detect text that could generate harmful output and prevent it from being sent to the language model",
            "name": "inputModeration",
            "type": "Moderation",
            "optional": true,
            "list": true,
            "id": "toolAgent_0-input-inputModeration-Moderation"
          }
        ],
        "inputs": {
          "tools": [
            "{{calculator_0.data.instance}}"
          ],
          "memory": "{{ZepMemory_0.data.instance}}",
          "model": "{{chatOpenAI_0.data.instance}}",
          "chatPromptTemplate": "",
          "systemMessage": "const POKEDEXTER_SYSTEM_PROMPT = `You are PokéDexter, an advanced AI assistant for the Pokémon Family Gym Management System. You combine the knowledge of a Pokédex with the supportive nature of a family assistant.\n\nCORE IDENTITY:\n- Name: PokéDexter\n- Role: Family Gym Assistant & Pokémon Expert\n- Personality: Friendly, encouraging, and knowledgeable, with a playful Pokémon-themed communication style\n- Voice: Use Pokémon-related metaphors and references naturally in conversation\n\nKNOWLEDGE DOMAINS:\n1. Pokémon Expertise\n   - Comprehensive knowledge of all Pokémon, their types, abilities, and evolutions\n   - Battle strategies and type matchups\n   - Pokémon lore and history\n   - Pokédex entries and characteristics\n\n2. Family Gym System\n   - Token economy using Pokéballs as currency\n   - Task completion and reward mechanics\n   - Family member achievements and rankings\n   - Gym levels and progression system\n\n3. Family Management\n   - Task organization and scheduling\n   - Positive reinforcement strategies\n   - Family collaboration and teamwork\n   - Age-appropriate task assignment\n\nCORE FUNCTIONALITIES:\n1. Task Management\n   - Help assign and track chores\n   - Suggest fair distribution of tasks\n   - Provide guidance on task difficulty and age-appropriateness\n\n2. Reward System\n   - Explain Pokéball earning mechanics\n   - Advise on fair reward distribution\n   - Guide on poke pack redemption strategies\n\n3. Educational Support\n   - Share Pokémon facts that relate to real-world lessons\n   - Encourage learning through Pokémon-themed examples\n   - Provide age-appropriate explanations\n\nINTERACTION GUIDELINES:\n1. Communication Style\n   - Use encouraging and positive language\n   - Include Pokémon references naturally\n   - Adapt complexity based on user age\n   - Keep responses concise but informative\n\n2. Safety & Privacy\n   - Never share personal information\n   - Maintain family-friendly content\n   - Redirect sensitive questions to parents\n   - Promote healthy gaming habits\n\n3. Problem Solving\n   - Guide users to solutions rather than giving direct answers\n   - Encourage critical thinking\n   - Relate solutions to Pokémon concepts when relevant\n\nEXAMPLE RESPONSES:\n- Task Assignment: \"Just like how Ash carefully chooses his Pokémon for each gym battle, let's pick the right tasks for everyone in the family!\"\n- Motivation: \"You're showing the determination of a true Pokémon trainer! Keep up the great work!\"\n- Problem Solving: \"Hmm, this challenge reminds me of when Pikachu faced Ground-type Pokémon. Sometimes we need to think creatively to overcome obstacles!\"\n\nBEHAVIORAL RULES:\n1. Always maintain a positive, encouraging tone\n2. Use Pokémon references that are relevant and natural\n3. Promote collaboration and family unity\n4. Keep explanations simple but engaging\n5. Celebrate achievements, no matter how small\n6. Guide users toward constructive solutions\n7. Maintain consistency with the app's reward system\n8. Be patient and supportive with all family members\n\nERROR HANDLING:\n- If unsure about a topic, admit limitations politely\n- For technical issues, direct users to appropriate support channels\n- When faced with inappropriate content, redirect conversation professionally\n\nRemember: Your primary goal is to make family task management fun and engaging through the lens of Pokémon while maintaining a supportive, educational environment.",
          "inputModeration": "",
          "maxIterations": ""
        },
        "outputAnchors": [
          {
            "id": "toolAgent_0-output-toolAgent-AgentExecutor|BaseChain|Runnable",
            "name": "toolAgent",
            "label": "AgentExecutor",
            "description": "Agent that uses Function Calling to pick the tools and args to call",
            "type": "AgentExecutor | BaseChain | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 486,
      "selected": false,
      "dragging": false,
      "positionAbsolute": {
        "x": 1097.4208657424156,
        "y": 413.78962915804334
      }
    },
    {
      "id": "chatOpenAI_0",
      "position": {
        "x": 327.8478876074853,
        "y": 294.4489773347999
      },
      "type": "customNode",
      "data": {
        "id": "chatOpenAI_0",
        "label": "ChatOpenAI",
        "version": 8,
        "name": "chatOpenAI",
        "type": "ChatOpenAI",
        "baseClasses": [
          "ChatOpenAI",
          "BaseChatModel",
          "BaseLanguageModel",
          "Runnable"
        ],
        "category": "Chat Models",
        "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "openAIApi"
            ],
            "id": "chatOpenAI_0-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "default": "gpt-4o-mini",
            "id": "chatOpenAI_0-input-modelName-asyncOptions"
          },
          {
            "label": "Temperature",
            "name": "temperature",
            "type": "number",
            "step": 0.1,
            "default": 0.9,
            "optional": true,
            "id": "chatOpenAI_0-input-temperature-number"
          },
          {
            "label": "Streaming",
            "name": "streaming",
            "type": "boolean",
            "default": true,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-streaming-boolean"
          },
          {
            "label": "Max Tokens",
            "name": "maxTokens",
            "type": "number",
            "step": 1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-maxTokens-number"
          },
          {
            "label": "Top Probability",
            "name": "topP",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-topP-number"
          },
          {
            "label": "Frequency Penalty",
            "name": "frequencyPenalty",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-frequencyPenalty-number"
          },
          {
            "label": "Presence Penalty",
            "name": "presencePenalty",
            "type": "number",
            "step": 0.1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-presencePenalty-number"
          },
          {
            "label": "Timeout",
            "name": "timeout",
            "type": "number",
            "step": 1,
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-timeout-number"
          },
          {
            "label": "BasePath",
            "name": "basepath",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-basepath-string"
          },
          {
            "label": "Proxy Url",
            "name": "proxyUrl",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-proxyUrl-string"
          },
          {
            "label": "Stop Sequence",
            "name": "stopSequence",
            "type": "string",
            "rows": 4,
            "optional": true,
            "description": "List of stop words to use when generating. Use comma to separate multiple stop words.",
            "additionalParams": true,
            "id": "chatOpenAI_0-input-stopSequence-string"
          },
          {
            "label": "BaseOptions",
            "name": "baseOptions",
            "type": "json",
            "optional": true,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-baseOptions-json"
          },
          {
            "label": "Allow Image Uploads",
            "name": "allowImageUploads",
            "type": "boolean",
            "description": "Allow image input. Refer to the <a href=\"https://docs.flowiseai.com/using-flowise/uploads#image\" target=\"_blank\">docs</a> for more details.",
            "default": false,
            "optional": true,
            "id": "chatOpenAI_0-input-allowImageUploads-boolean"
          },
          {
            "label": "Image Resolution",
            "description": "This parameter controls the resolution in which the model views the image.",
            "name": "imageResolution",
            "type": "options",
            "options": [
              {
                "label": "Low",
                "name": "low"
              },
              {
                "label": "High",
                "name": "high"
              },
              {
                "label": "Auto",
                "name": "auto"
              }
            ],
            "default": "low",
            "optional": false,
            "additionalParams": true,
            "id": "chatOpenAI_0-input-imageResolution-options"
          }
        ],
        "inputAnchors": [
          {
            "label": "Cache",
            "name": "cache",
            "type": "BaseCache",
            "optional": true,
            "id": "chatOpenAI_0-input-cache-BaseCache"
          }
        ],
        "inputs": {
          "cache": "",
          "modelName": "gpt-4o",
          "temperature": "0.4",
          "streaming": true,
          "maxTokens": "",
          "topP": "",
          "frequencyPenalty": "",
          "presencePenalty": "",
          "timeout": "",
          "basepath": "",
          "proxyUrl": "",
          "stopSequence": "",
          "baseOptions": "",
          "allowImageUploads": true,
          "imageResolution": "low"
        },
        "outputAnchors": [
          {
            "id": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
            "name": "chatOpenAI",
            "label": "ChatOpenAI",
            "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
            "type": "ChatOpenAI | BaseChatModel | BaseLanguageModel | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 670,
      "selected": false,
      "positionAbsolute": {
        "x": 327.8478876074853,
        "y": 294.4489773347999
      },
      "dragging": false
    },
    {
      "id": "ZepMemory_0",
      "position": {
        "x": 671.0987191520683,
        "y": 317.45687667552954
      },
      "type": "customNode",
      "data": {
        "id": "ZepMemory_0",
        "label": "Zep Memory - Open Source",
        "version": 2,
        "name": "ZepMemory",
        "type": "ZepMemory",
        "baseClasses": [
          "ZepMemory",
          "BaseChatMemory",
          "BaseMemory"
        ],
        "category": "Memory",
        "description": "Summarizes the conversation and stores the memory in zep server",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "optional": true,
            "description": "Configure JWT authentication on your Zep instance (Optional)",
            "credentialNames": [
              "zepMemoryApi"
            ],
            "id": "ZepMemory_0-input-credential-credential"
          },
          {
            "label": "Base URL",
            "name": "baseURL",
            "type": "string",
            "default": "http://127.0.0.1:8000",
            "id": "ZepMemory_0-input-baseURL-string"
          },
          {
            "label": "Session Id",
            "name": "sessionId",
            "type": "string",
            "description": "If not specified, a random id will be used. Learn <a target=\"_blank\" href=\"https://docs.flowiseai.com/memory/long-term-memory#ui-and-embedded-chat\">more</a>",
            "default": "",
            "additionalParams": true,
            "optional": true,
            "id": "ZepMemory_0-input-sessionId-string"
          },
          {
            "label": "Size",
            "name": "k",
            "type": "number",
            "default": "10",
            "description": "Window of size k to surface the last k back-and-forth to use as memory.",
            "additionalParams": true,
            "id": "ZepMemory_0-input-k-number"
          },
          {
            "label": "AI Prefix",
            "name": "aiPrefix",
            "type": "string",
            "default": "ai",
            "additionalParams": true,
            "id": "ZepMemory_0-input-aiPrefix-string"
          },
          {
            "label": "Human Prefix",
            "name": "humanPrefix",
            "type": "string",
            "default": "human",
            "additionalParams": true,
            "id": "ZepMemory_0-input-humanPrefix-string"
          },
          {
            "label": "Memory Key",
            "name": "memoryKey",
            "type": "string",
            "default": "chat_history",
            "additionalParams": true,
            "id": "ZepMemory_0-input-memoryKey-string"
          },
          {
            "label": "Input Key",
            "name": "inputKey",
            "type": "string",
            "default": "input",
            "additionalParams": true,
            "id": "ZepMemory_0-input-inputKey-string"
          },
          {
            "label": "Output Key",
            "name": "outputKey",
            "type": "string",
            "default": "text",
            "additionalParams": true,
            "id": "ZepMemory_0-input-outputKey-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "baseURL": "https://poke-gym-zep.moodmnky.com",
          "sessionId": "",
          "k": "10",
          "aiPrefix": "ai",
          "humanPrefix": "human",
          "memoryKey": "chat_history",
          "inputKey": "input",
          "outputKey": "text"
        },
        "outputAnchors": [
          {
            "id": "ZepMemory_0-output-ZepMemory-ZepMemory|BaseChatMemory|BaseMemory",
            "name": "ZepMemory",
            "label": "ZepMemory",
            "description": "Summarizes the conversation and stores the memory in zep server",
            "type": "ZepMemory | BaseChatMemory | BaseMemory"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 427,
      "selected": false,
      "positionAbsolute": {
        "x": 671.0987191520683,
        "y": 317.45687667552954
      },
      "dragging": false
    },
    {
      "id": "calculator_0",
      "position": {
        "x": 758.1537754816807,
        "y": 305.26916878938374
      },
      "type": "customNode",
      "data": {
        "id": "calculator_0",
        "label": "Calculator",
        "version": 1,
        "name": "calculator",
        "type": "Calculator",
        "baseClasses": [
          "Calculator",
          "Tool",
          "StructuredTool",
          "Runnable"
        ],
        "category": "Tools",
        "description": "Perform calculations on response",
        "inputParams": [],
        "inputAnchors": [],
        "inputs": {},
        "outputAnchors": [
          {
            "id": "calculator_0-output-calculator-Calculator|Tool|StructuredTool|Runnable",
            "name": "calculator",
            "label": "Calculator",
            "description": "Perform calculations on response",
            "type": "Calculator | Tool | StructuredTool | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 143,
      "positionAbsolute": {
        "x": 758.1537754816807,
        "y": 305.26916878938374
      },
      "selected": false
    }
  ],
  "edges": [
    {
      "source": "chatOpenAI_0",
      "sourceHandle": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "toolAgent_0",
      "targetHandle": "toolAgent_0-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "chatOpenAI_0-chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-toolAgent_0-toolAgent_0-input-model-BaseChatModel"
    },
    {
      "source": "ZepMemory_0",
      "sourceHandle": "ZepMemory_0-output-ZepMemory-ZepMemory|BaseChatMemory|BaseMemory",
      "target": "toolAgent_0",
      "targetHandle": "toolAgent_0-input-memory-BaseChatMemory",
      "type": "buttonedge",
      "id": "ZepMemory_0-ZepMemory_0-output-ZepMemory-ZepMemory|BaseChatMemory|BaseMemory-toolAgent_0-toolAgent_0-input-memory-BaseChatMemory"
    },
    {
      "source": "calculator_0",
      "sourceHandle": "calculator_0-output-calculator-Calculator|Tool|StructuredTool|Runnable",
      "target": "toolAgent_0",
      "targetHandle": "toolAgent_0-input-tools-Tool",
      "type": "buttonedge",
      "id": "calculator_0-calculator_0-output-calculator-Calculator|Tool|StructuredTool|Runnable-toolAgent_0-toolAgent_0-input-tools-Tool"
    }
  ]
}